#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HumaneSociety
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HumaneSociety")]
	public partial class HumaneSocietyDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAnimal(Animal instance);
    partial void UpdateAnimal(Animal instance);
    partial void DeleteAnimal(Animal instance);
    partial void InsertAnimalShotJunction(AnimalShotJunction instance);
    partial void UpdateAnimalShotJunction(AnimalShotJunction instance);
    partial void DeleteAnimalShotJunction(AnimalShotJunction instance);
    partial void InsertBreed(Breed instance);
    partial void UpdateBreed(Breed instance);
    partial void DeleteBreed(Breed instance);
    partial void InsertCatagory(Catagory instance);
    partial void UpdateCatagory(Catagory instance);
    partial void DeleteCatagory(Catagory instance);
    partial void InsertClientAnimalJunction(ClientAnimalJunction instance);
    partial void UpdateClientAnimalJunction(ClientAnimalJunction instance);
    partial void DeleteClientAnimalJunction(ClientAnimalJunction instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertDietPlan(DietPlan instance);
    partial void UpdateDietPlan(DietPlan instance);
    partial void DeleteDietPlan(DietPlan instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertShot(Shot instance);
    partial void UpdateShot(Shot instance);
    partial void DeleteShot(Shot instance);
    partial void InsertUserAddress(UserAddress instance);
    partial void UpdateUserAddress(UserAddress instance);
    partial void DeleteUserAddress(UserAddress instance);
    partial void InsertUSState(USState instance);
    partial void UpdateUSState(USState instance);
    partial void DeleteUSState(USState instance);
    #endregion
		
		public HumaneSocietyDataContext() : 
				base(global::HumaneSociety.Properties.Settings.Default.HumaneSocietyConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Animal> Animals
		{
			get
			{
				return this.GetTable<Animal>();
			}
		}
		
		public System.Data.Linq.Table<AnimalShotJunction> AnimalShotJunctions
		{
			get
			{
				return this.GetTable<AnimalShotJunction>();
			}
		}
		
		public System.Data.Linq.Table<Breed> Breeds
		{
			get
			{
				return this.GetTable<Breed>();
			}
		}
		
		public System.Data.Linq.Table<Catagory> Catagories
		{
			get
			{
				return this.GetTable<Catagory>();
			}
		}
		
		public System.Data.Linq.Table<ClientAnimalJunction> ClientAnimalJunctions
		{
			get
			{
				return this.GetTable<ClientAnimalJunction>();
			}
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<DietPlan> DietPlans
		{
			get
			{
				return this.GetTable<DietPlan>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<Shot> Shots
		{
			get
			{
				return this.GetTable<Shot>();
			}
		}
		
		public System.Data.Linq.Table<UserAddress> UserAddresses
		{
			get
			{
				return this.GetTable<UserAddress>();
			}
		}
		
		public System.Data.Linq.Table<USState> USStates
		{
			get
			{
				return this.GetTable<USState>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Animals")]
	public partial class Animal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private System.Nullable<int> _breed;
		
		private System.Nullable<int> _weight;
		
		private System.Nullable<int> _age;
		
		private System.Nullable<int> _diet;
		
		private System.Nullable<int> _location;
		
		private string _demeanor;
		
		private System.Nullable<bool> _kidFriendly;
		
		private System.Nullable<bool> _petFriendly;
		
		private System.Nullable<bool> _gender;
		
		private string _adoptionStatus;
		
		private System.Nullable<int> _Employee_ID;
		
		private EntitySet<AnimalShotJunction> _AnimalShotJunctions;
		
		private EntitySet<ClientAnimalJunction> _ClientAnimalJunctions;
		
		private EntityRef<Breed> _Breed1;
		
		private EntityRef<DietPlan> _DietPlan;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Room> _Room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnbreedChanging(System.Nullable<int> value);
    partial void OnbreedChanged();
    partial void OnweightChanging(System.Nullable<int> value);
    partial void OnweightChanged();
    partial void OnageChanging(System.Nullable<int> value);
    partial void OnageChanged();
    partial void OndietChanging(System.Nullable<int> value);
    partial void OndietChanged();
    partial void OnlocationChanging(System.Nullable<int> value);
    partial void OnlocationChanged();
    partial void OndemeanorChanging(string value);
    partial void OndemeanorChanged();
    partial void OnkidFriendlyChanging(System.Nullable<bool> value);
    partial void OnkidFriendlyChanged();
    partial void OnpetFriendlyChanging(System.Nullable<bool> value);
    partial void OnpetFriendlyChanged();
    partial void OngenderChanging(System.Nullable<bool> value);
    partial void OngenderChanged();
    partial void OnadoptionStatusChanging(string value);
    partial void OnadoptionStatusChanged();
    partial void OnEmployee_IDChanging(System.Nullable<int> value);
    partial void OnEmployee_IDChanged();
    #endregion
		
		public Animal()
		{
			this._AnimalShotJunctions = new EntitySet<AnimalShotJunction>(new Action<AnimalShotJunction>(this.attach_AnimalShotJunctions), new Action<AnimalShotJunction>(this.detach_AnimalShotJunctions));
			this._ClientAnimalJunctions = new EntitySet<ClientAnimalJunction>(new Action<ClientAnimalJunction>(this.attach_ClientAnimalJunctions), new Action<ClientAnimalJunction>(this.detach_ClientAnimalJunctions));
			this._Breed1 = default(EntityRef<Breed>);
			this._DietPlan = default(EntityRef<DietPlan>);
			this._Employee = default(EntityRef<Employee>);
			this._Room = default(EntityRef<Room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_breed", DbType="Int")]
		public System.Nullable<int> breed
		{
			get
			{
				return this._breed;
			}
			set
			{
				if ((this._breed != value))
				{
					if (this._Breed1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbreedChanging(value);
					this.SendPropertyChanging();
					this._breed = value;
					this.SendPropertyChanged("breed");
					this.OnbreedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Int")]
		public System.Nullable<int> weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Int")]
		public System.Nullable<int> age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diet", DbType="Int")]
		public System.Nullable<int> diet
		{
			get
			{
				return this._diet;
			}
			set
			{
				if ((this._diet != value))
				{
					if (this._DietPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndietChanging(value);
					this.SendPropertyChanging();
					this._diet = value;
					this.SendPropertyChanged("diet");
					this.OndietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="Int")]
		public System.Nullable<int> location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_demeanor", DbType="VarChar(50)")]
		public string demeanor
		{
			get
			{
				return this._demeanor;
			}
			set
			{
				if ((this._demeanor != value))
				{
					this.OndemeanorChanging(value);
					this.SendPropertyChanging();
					this._demeanor = value;
					this.SendPropertyChanged("demeanor");
					this.OndemeanorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kidFriendly", DbType="Bit")]
		public System.Nullable<bool> kidFriendly
		{
			get
			{
				return this._kidFriendly;
			}
			set
			{
				if ((this._kidFriendly != value))
				{
					this.OnkidFriendlyChanging(value);
					this.SendPropertyChanging();
					this._kidFriendly = value;
					this.SendPropertyChanged("kidFriendly");
					this.OnkidFriendlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_petFriendly", DbType="Bit")]
		public System.Nullable<bool> petFriendly
		{
			get
			{
				return this._petFriendly;
			}
			set
			{
				if ((this._petFriendly != value))
				{
					this.OnpetFriendlyChanging(value);
					this.SendPropertyChanging();
					this._petFriendly = value;
					this.SendPropertyChanged("petFriendly");
					this.OnpetFriendlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Bit")]
		public System.Nullable<bool> gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adoptionStatus", DbType="VarChar(50)")]
		public string adoptionStatus
		{
			get
			{
				return this._adoptionStatus;
			}
			set
			{
				if ((this._adoptionStatus != value))
				{
					this.OnadoptionStatusChanging(value);
					this.SendPropertyChanging();
					this._adoptionStatus = value;
					this.SendPropertyChanged("adoptionStatus");
					this.OnadoptionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_ID", DbType="Int")]
		public System.Nullable<int> Employee_ID
		{
			get
			{
				return this._Employee_ID;
			}
			set
			{
				if ((this._Employee_ID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployee_IDChanging(value);
					this.SendPropertyChanging();
					this._Employee_ID = value;
					this.SendPropertyChanged("Employee_ID");
					this.OnEmployee_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_AnimalShotJunction", Storage="_AnimalShotJunctions", ThisKey="ID", OtherKey="Animal_ID")]
		public EntitySet<AnimalShotJunction> AnimalShotJunctions
		{
			get
			{
				return this._AnimalShotJunctions;
			}
			set
			{
				this._AnimalShotJunctions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_ClientAnimalJunction", Storage="_ClientAnimalJunctions", ThisKey="ID", OtherKey="animal")]
		public EntitySet<ClientAnimalJunction> ClientAnimalJunctions
		{
			get
			{
				return this._ClientAnimalJunctions;
			}
			set
			{
				this._ClientAnimalJunctions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Breed_Animal", Storage="_Breed1", ThisKey="breed", OtherKey="ID", IsForeignKey=true)]
		public Breed Breed1
		{
			get
			{
				return this._Breed1.Entity;
			}
			set
			{
				Breed previousValue = this._Breed1.Entity;
				if (((previousValue != value) 
							|| (this._Breed1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Breed1.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._Breed1.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._breed = value.ID;
					}
					else
					{
						this._breed = default(Nullable<int>);
					}
					this.SendPropertyChanged("Breed1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DietPlan_Animal", Storage="_DietPlan", ThisKey="diet", OtherKey="ID", IsForeignKey=true)]
		public DietPlan DietPlan
		{
			get
			{
				return this._DietPlan.Entity;
			}
			set
			{
				DietPlan previousValue = this._DietPlan.Entity;
				if (((previousValue != value) 
							|| (this._DietPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DietPlan.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._DietPlan.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._diet = value.ID;
					}
					else
					{
						this._diet = default(Nullable<int>);
					}
					this.SendPropertyChanged("DietPlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Animal", Storage="_Employee", ThisKey="Employee_ID", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._Employee_ID = value.ID;
					}
					else
					{
						this._Employee_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Animal", Storage="_Room", ThisKey="location", OtherKey="ID", IsForeignKey=true)]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._location = value.ID;
					}
					else
					{
						this._location = default(Nullable<int>);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AnimalShotJunctions(AnimalShotJunction entity)
		{
			this.SendPropertyChanging();
			entity.Animal = this;
		}
		
		private void detach_AnimalShotJunctions(AnimalShotJunction entity)
		{
			this.SendPropertyChanging();
			entity.Animal = null;
		}
		
		private void attach_ClientAnimalJunctions(ClientAnimalJunction entity)
		{
			this.SendPropertyChanging();
			entity.Animal1 = this;
		}
		
		private void detach_ClientAnimalJunctions(ClientAnimalJunction entity)
		{
			this.SendPropertyChanging();
			entity.Animal1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnimalShotJunctions")]
	public partial class AnimalShotJunction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Animal_ID;
		
		private int _Shot_ID;
		
		private System.Nullable<System.DateTime> _dateRecieved;
		
		private EntityRef<Animal> _Animal;
		
		private EntityRef<Shot> _Shot;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnimal_IDChanging(int value);
    partial void OnAnimal_IDChanged();
    partial void OnShot_IDChanging(int value);
    partial void OnShot_IDChanged();
    partial void OndateRecievedChanging(System.Nullable<System.DateTime> value);
    partial void OndateRecievedChanged();
    #endregion
		
		public AnimalShotJunction()
		{
			this._Animal = default(EntityRef<Animal>);
			this._Shot = default(EntityRef<Shot>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Animal_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Animal_ID
		{
			get
			{
				return this._Animal_ID;
			}
			set
			{
				if ((this._Animal_ID != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnimal_IDChanging(value);
					this.SendPropertyChanging();
					this._Animal_ID = value;
					this.SendPropertyChanged("Animal_ID");
					this.OnAnimal_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shot_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Shot_ID
		{
			get
			{
				return this._Shot_ID;
			}
			set
			{
				if ((this._Shot_ID != value))
				{
					if (this._Shot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShot_IDChanging(value);
					this.SendPropertyChanging();
					this._Shot_ID = value;
					this.SendPropertyChanged("Shot_ID");
					this.OnShot_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateRecieved", DbType="Date")]
		public System.Nullable<System.DateTime> dateRecieved
		{
			get
			{
				return this._dateRecieved;
			}
			set
			{
				if ((this._dateRecieved != value))
				{
					this.OndateRecievedChanging(value);
					this.SendPropertyChanging();
					this._dateRecieved = value;
					this.SendPropertyChanged("dateRecieved");
					this.OndateRecievedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_AnimalShotJunction", Storage="_Animal", ThisKey="Animal_ID", OtherKey="ID", IsForeignKey=true)]
		public Animal Animal
		{
			get
			{
				return this._Animal.Entity;
			}
			set
			{
				Animal previousValue = this._Animal.Entity;
				if (((previousValue != value) 
							|| (this._Animal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal.Entity = null;
						previousValue.AnimalShotJunctions.Remove(this);
					}
					this._Animal.Entity = value;
					if ((value != null))
					{
						value.AnimalShotJunctions.Add(this);
						this._Animal_ID = value.ID;
					}
					else
					{
						this._Animal_ID = default(int);
					}
					this.SendPropertyChanged("Animal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shot_AnimalShotJunction", Storage="_Shot", ThisKey="Shot_ID", OtherKey="ID", IsForeignKey=true)]
		public Shot Shot
		{
			get
			{
				return this._Shot.Entity;
			}
			set
			{
				Shot previousValue = this._Shot.Entity;
				if (((previousValue != value) 
							|| (this._Shot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shot.Entity = null;
						previousValue.AnimalShotJunctions.Remove(this);
					}
					this._Shot.Entity = value;
					if ((value != null))
					{
						value.AnimalShotJunctions.Add(this);
						this._Shot_ID = value.ID;
					}
					else
					{
						this._Shot_ID = default(int);
					}
					this.SendPropertyChanged("Shot");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Breeds")]
	public partial class Breed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _breed1;
		
		private System.Nullable<int> _catagory;
		
		private string _pattern;
		
		private EntitySet<Animal> _Animals;
		
		private EntityRef<Catagory> _Catagory1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onbreed1Changing(string value);
    partial void Onbreed1Changed();
    partial void OncatagoryChanging(System.Nullable<int> value);
    partial void OncatagoryChanged();
    partial void OnpatternChanging(string value);
    partial void OnpatternChanged();
    #endregion
		
		public Breed()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			this._Catagory1 = default(EntityRef<Catagory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="breed", Storage="_breed1", DbType="VarChar(50)")]
		public string breed1
		{
			get
			{
				return this._breed1;
			}
			set
			{
				if ((this._breed1 != value))
				{
					this.Onbreed1Changing(value);
					this.SendPropertyChanging();
					this._breed1 = value;
					this.SendPropertyChanged("breed1");
					this.Onbreed1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catagory", DbType="Int")]
		public System.Nullable<int> catagory
		{
			get
			{
				return this._catagory;
			}
			set
			{
				if ((this._catagory != value))
				{
					if (this._Catagory1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncatagoryChanging(value);
					this.SendPropertyChanging();
					this._catagory = value;
					this.SendPropertyChanged("catagory");
					this.OncatagoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pattern", DbType="VarChar(50)")]
		public string pattern
		{
			get
			{
				return this._pattern;
			}
			set
			{
				if ((this._pattern != value))
				{
					this.OnpatternChanging(value);
					this.SendPropertyChanging();
					this._pattern = value;
					this.SendPropertyChanged("pattern");
					this.OnpatternChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Breed_Animal", Storage="_Animals", ThisKey="ID", OtherKey="breed")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catagory_Breed", Storage="_Catagory1", ThisKey="catagory", OtherKey="ID", IsForeignKey=true)]
		public Catagory Catagory1
		{
			get
			{
				return this._Catagory1.Entity;
			}
			set
			{
				Catagory previousValue = this._Catagory1.Entity;
				if (((previousValue != value) 
							|| (this._Catagory1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catagory1.Entity = null;
						previousValue.Breeds.Remove(this);
					}
					this._Catagory1.Entity = value;
					if ((value != null))
					{
						value.Breeds.Add(this);
						this._catagory = value.ID;
					}
					else
					{
						this._catagory = default(Nullable<int>);
					}
					this.SendPropertyChanged("Catagory1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Breed1 = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Breed1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catagories")]
	public partial class Catagory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _catagory1;
		
		private EntitySet<Breed> _Breeds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Oncatagory1Changing(string value);
    partial void Oncatagory1Changed();
    #endregion
		
		public Catagory()
		{
			this._Breeds = new EntitySet<Breed>(new Action<Breed>(this.attach_Breeds), new Action<Breed>(this.detach_Breeds));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="catagory", Storage="_catagory1", DbType="VarChar(50)")]
		public string catagory1
		{
			get
			{
				return this._catagory1;
			}
			set
			{
				if ((this._catagory1 != value))
				{
					this.Oncatagory1Changing(value);
					this.SendPropertyChanging();
					this._catagory1 = value;
					this.SendPropertyChanged("catagory1");
					this.Oncatagory1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catagory_Breed", Storage="_Breeds", ThisKey="ID", OtherKey="catagory")]
		public EntitySet<Breed> Breeds
		{
			get
			{
				return this._Breeds;
			}
			set
			{
				this._Breeds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Breeds(Breed entity)
		{
			this.SendPropertyChanging();
			entity.Catagory1 = this;
		}
		
		private void detach_Breeds(Breed entity)
		{
			this.SendPropertyChanging();
			entity.Catagory1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientAnimalJunctions")]
	public partial class ClientAnimalJunction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _client;
		
		private int _animal;
		
		private string _approvalStatus;
		
		private EntityRef<Animal> _Animal1;
		
		private EntityRef<Client> _Client1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnclientChanging(int value);
    partial void OnclientChanged();
    partial void OnanimalChanging(int value);
    partial void OnanimalChanged();
    partial void OnapprovalStatusChanging(string value);
    partial void OnapprovalStatusChanged();
    #endregion
		
		public ClientAnimalJunction()
		{
			this._Animal1 = default(EntityRef<Animal>);
			this._Client1 = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int client
		{
			get
			{
				return this._client;
			}
			set
			{
				if ((this._client != value))
				{
					if (this._Client1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnclientChanging(value);
					this.SendPropertyChanging();
					this._client = value;
					this.SendPropertyChanged("client");
					this.OnclientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_animal", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int animal
		{
			get
			{
				return this._animal;
			}
			set
			{
				if ((this._animal != value))
				{
					if (this._Animal1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnanimalChanging(value);
					this.SendPropertyChanging();
					this._animal = value;
					this.SendPropertyChanged("animal");
					this.OnanimalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approvalStatus", DbType="VarChar(50)")]
		public string approvalStatus
		{
			get
			{
				return this._approvalStatus;
			}
			set
			{
				if ((this._approvalStatus != value))
				{
					this.OnapprovalStatusChanging(value);
					this.SendPropertyChanging();
					this._approvalStatus = value;
					this.SendPropertyChanged("approvalStatus");
					this.OnapprovalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_ClientAnimalJunction", Storage="_Animal1", ThisKey="animal", OtherKey="ID", IsForeignKey=true)]
		public Animal Animal1
		{
			get
			{
				return this._Animal1.Entity;
			}
			set
			{
				Animal previousValue = this._Animal1.Entity;
				if (((previousValue != value) 
							|| (this._Animal1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal1.Entity = null;
						previousValue.ClientAnimalJunctions.Remove(this);
					}
					this._Animal1.Entity = value;
					if ((value != null))
					{
						value.ClientAnimalJunctions.Add(this);
						this._animal = value.ID;
					}
					else
					{
						this._animal = default(int);
					}
					this.SendPropertyChanged("Animal1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_ClientAnimalJunction", Storage="_Client1", ThisKey="client", OtherKey="ID", IsForeignKey=true)]
		public Client Client1
		{
			get
			{
				return this._Client1.Entity;
			}
			set
			{
				Client previousValue = this._Client1.Entity;
				if (((previousValue != value) 
							|| (this._Client1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client1.Entity = null;
						previousValue.ClientAnimalJunctions.Remove(this);
					}
					this._Client1.Entity = value;
					if ((value != null))
					{
						value.ClientAnimalJunctions.Add(this);
						this._client = value.ID;
					}
					else
					{
						this._client = default(int);
					}
					this.SendPropertyChanged("Client1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clients")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _userName;
		
		private string _pass;
		
		private System.Nullable<int> _userAddress;
		
		private string _email;
		
		private System.Nullable<int> _income;
		
		private System.Nullable<int> _kids;
		
		private System.Nullable<int> _homeSize;
		
		private EntitySet<ClientAnimalJunction> _ClientAnimalJunctions;
		
		private EntityRef<UserAddress> _UserAddress1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnuserAddressChanging(System.Nullable<int> value);
    partial void OnuserAddressChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnincomeChanging(System.Nullable<int> value);
    partial void OnincomeChanged();
    partial void OnkidsChanging(System.Nullable<int> value);
    partial void OnkidsChanged();
    partial void OnhomeSizeChanging(System.Nullable<int> value);
    partial void OnhomeSizeChanged();
    #endregion
		
		public Client()
		{
			this._ClientAnimalJunctions = new EntitySet<ClientAnimalJunction>(new Action<ClientAnimalJunction>(this.attach_ClientAnimalJunctions), new Action<ClientAnimalJunction>(this.detach_ClientAnimalJunctions));
			this._UserAddress1 = default(EntityRef<UserAddress>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(50)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(50)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(50)")]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(50)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userAddress", DbType="Int")]
		public System.Nullable<int> userAddress
		{
			get
			{
				return this._userAddress;
			}
			set
			{
				if ((this._userAddress != value))
				{
					if (this._UserAddress1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserAddressChanging(value);
					this.SendPropertyChanging();
					this._userAddress = value;
					this.SendPropertyChanged("userAddress");
					this.OnuserAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_income", DbType="Int")]
		public System.Nullable<int> income
		{
			get
			{
				return this._income;
			}
			set
			{
				if ((this._income != value))
				{
					this.OnincomeChanging(value);
					this.SendPropertyChanging();
					this._income = value;
					this.SendPropertyChanged("income");
					this.OnincomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kids", DbType="Int")]
		public System.Nullable<int> kids
		{
			get
			{
				return this._kids;
			}
			set
			{
				if ((this._kids != value))
				{
					this.OnkidsChanging(value);
					this.SendPropertyChanging();
					this._kids = value;
					this.SendPropertyChanged("kids");
					this.OnkidsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_homeSize", DbType="Int")]
		public System.Nullable<int> homeSize
		{
			get
			{
				return this._homeSize;
			}
			set
			{
				if ((this._homeSize != value))
				{
					this.OnhomeSizeChanging(value);
					this.SendPropertyChanging();
					this._homeSize = value;
					this.SendPropertyChanged("homeSize");
					this.OnhomeSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_ClientAnimalJunction", Storage="_ClientAnimalJunctions", ThisKey="ID", OtherKey="client")]
		public EntitySet<ClientAnimalJunction> ClientAnimalJunctions
		{
			get
			{
				return this._ClientAnimalJunctions;
			}
			set
			{
				this._ClientAnimalJunctions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAddress_Client", Storage="_UserAddress1", ThisKey="userAddress", OtherKey="ID", IsForeignKey=true)]
		public UserAddress UserAddress1
		{
			get
			{
				return this._UserAddress1.Entity;
			}
			set
			{
				UserAddress previousValue = this._UserAddress1.Entity;
				if (((previousValue != value) 
							|| (this._UserAddress1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAddress1.Entity = null;
						previousValue.Clients.Remove(this);
					}
					this._UserAddress1.Entity = value;
					if ((value != null))
					{
						value.Clients.Add(this);
						this._userAddress = value.ID;
					}
					else
					{
						this._userAddress = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserAddress1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientAnimalJunctions(ClientAnimalJunction entity)
		{
			this.SendPropertyChanging();
			entity.Client1 = this;
		}
		
		private void detach_ClientAnimalJunctions(ClientAnimalJunction entity)
		{
			this.SendPropertyChanging();
			entity.Client1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DietPlans")]
	public partial class DietPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _food;
		
		private System.Nullable<int> _amount;
		
		private EntitySet<Animal> _Animals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnfoodChanging(string value);
    partial void OnfoodChanged();
    partial void OnamountChanging(System.Nullable<int> value);
    partial void OnamountChanged();
    #endregion
		
		public DietPlan()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_food", DbType="VarChar(50)")]
		public string food
		{
			get
			{
				return this._food;
			}
			set
			{
				if ((this._food != value))
				{
					this.OnfoodChanging(value);
					this.SendPropertyChanging();
					this._food = value;
					this.SendPropertyChanged("food");
					this.OnfoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int")]
		public System.Nullable<int> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DietPlan_Animal", Storage="_Animals", ThisKey="ID", OtherKey="diet")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.DietPlan = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.DietPlan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _firsttName;
		
		private string _lastName;
		
		private string _userName;
		
		private string _pass;
		
		private System.Nullable<int> _employeeNumber;
		
		private string _email;
		
		private EntitySet<Animal> _Animals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnfirsttNameChanging(string value);
    partial void OnfirsttNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnemployeeNumberChanging(System.Nullable<int> value);
    partial void OnemployeeNumberChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public Employee()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firsttName", DbType="VarChar(50)")]
		public string firsttName
		{
			get
			{
				return this._firsttName;
			}
			set
			{
				if ((this._firsttName != value))
				{
					this.OnfirsttNameChanging(value);
					this.SendPropertyChanging();
					this._firsttName = value;
					this.SendPropertyChanged("firsttName");
					this.OnfirsttNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(50)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(50)")]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(50)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeNumber", DbType="Int")]
		public System.Nullable<int> employeeNumber
		{
			get
			{
				return this._employeeNumber;
			}
			set
			{
				if ((this._employeeNumber != value))
				{
					this.OnemployeeNumberChanging(value);
					this.SendPropertyChanging();
					this._employeeNumber = value;
					this.SendPropertyChanged("employeeNumber");
					this.OnemployeeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Animal", Storage="_Animals", ThisKey="ID", OtherKey="Employee_ID")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rooms")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private string _building;
		
		private EntitySet<Animal> _Animals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnbuildingChanging(string value);
    partial void OnbuildingChanged();
    #endregion
		
		public Room()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_building", DbType="VarChar(50)")]
		public string building
		{
			get
			{
				return this._building;
			}
			set
			{
				if ((this._building != value))
				{
					this.OnbuildingChanging(value);
					this.SendPropertyChanging();
					this._building = value;
					this.SendPropertyChanged("building");
					this.OnbuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Animal", Storage="_Animals", ThisKey="ID", OtherKey="location")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shots")]
	public partial class Shot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private EntitySet<AnimalShotJunction> _AnimalShotJunctions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Shot()
		{
			this._AnimalShotJunctions = new EntitySet<AnimalShotJunction>(new Action<AnimalShotJunction>(this.attach_AnimalShotJunctions), new Action<AnimalShotJunction>(this.detach_AnimalShotJunctions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shot_AnimalShotJunction", Storage="_AnimalShotJunctions", ThisKey="ID", OtherKey="Shot_ID")]
		public EntitySet<AnimalShotJunction> AnimalShotJunctions
		{
			get
			{
				return this._AnimalShotJunctions;
			}
			set
			{
				this._AnimalShotJunctions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AnimalShotJunctions(AnimalShotJunction entity)
		{
			this.SendPropertyChanging();
			entity.Shot = this;
		}
		
		private void detach_AnimalShotJunctions(AnimalShotJunction entity)
		{
			this.SendPropertyChanging();
			entity.Shot = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAddresses")]
	public partial class UserAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _addessLine1;
		
		private string _addressLine2;
		
		private System.Nullable<int> _zipcode;
		
		private System.Nullable<int> _USStates;
		
		private EntitySet<Client> _Clients;
		
		private EntityRef<USState> _USState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnaddessLine1Changing(string value);
    partial void OnaddessLine1Changed();
    partial void OnaddressLine2Changing(string value);
    partial void OnaddressLine2Changed();
    partial void OnzipcodeChanging(System.Nullable<int> value);
    partial void OnzipcodeChanged();
    partial void OnUSStatesChanging(System.Nullable<int> value);
    partial void OnUSStatesChanged();
    #endregion
		
		public UserAddress()
		{
			this._Clients = new EntitySet<Client>(new Action<Client>(this.attach_Clients), new Action<Client>(this.detach_Clients));
			this._USState = default(EntityRef<USState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addessLine1", DbType="VarChar(50)")]
		public string addessLine1
		{
			get
			{
				return this._addessLine1;
			}
			set
			{
				if ((this._addessLine1 != value))
				{
					this.OnaddessLine1Changing(value);
					this.SendPropertyChanging();
					this._addessLine1 = value;
					this.SendPropertyChanged("addessLine1");
					this.OnaddessLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressLine2", DbType="VarChar(50)")]
		public string addressLine2
		{
			get
			{
				return this._addressLine2;
			}
			set
			{
				if ((this._addressLine2 != value))
				{
					this.OnaddressLine2Changing(value);
					this.SendPropertyChanging();
					this._addressLine2 = value;
					this.SendPropertyChanged("addressLine2");
					this.OnaddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zipcode", DbType="Int")]
		public System.Nullable<int> zipcode
		{
			get
			{
				return this._zipcode;
			}
			set
			{
				if ((this._zipcode != value))
				{
					this.OnzipcodeChanging(value);
					this.SendPropertyChanging();
					this._zipcode = value;
					this.SendPropertyChanged("zipcode");
					this.OnzipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USStates", DbType="Int")]
		public System.Nullable<int> USStates
		{
			get
			{
				return this._USStates;
			}
			set
			{
				if ((this._USStates != value))
				{
					if (this._USState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSStatesChanging(value);
					this.SendPropertyChanging();
					this._USStates = value;
					this.SendPropertyChanged("USStates");
					this.OnUSStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAddress_Client", Storage="_Clients", ThisKey="ID", OtherKey="userAddress")]
		public EntitySet<Client> Clients
		{
			get
			{
				return this._Clients;
			}
			set
			{
				this._Clients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USState_UserAddress", Storage="_USState", ThisKey="USStates", OtherKey="ID", IsForeignKey=true)]
		public USState USState
		{
			get
			{
				return this._USState.Entity;
			}
			set
			{
				USState previousValue = this._USState.Entity;
				if (((previousValue != value) 
							|| (this._USState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USState.Entity = null;
						previousValue.UserAddresses.Remove(this);
					}
					this._USState.Entity = value;
					if ((value != null))
					{
						value.UserAddresses.Add(this);
						this._USStates = value.ID;
					}
					else
					{
						this._USStates = default(Nullable<int>);
					}
					this.SendPropertyChanged("USState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.UserAddress1 = this;
		}
		
		private void detach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.UserAddress1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USStates")]
	public partial class USState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private string _abbrev;
		
		private EntitySet<UserAddress> _UserAddresses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnabbrevChanging(string value);
    partial void OnabbrevChanged();
    #endregion
		
		public USState()
		{
			this._UserAddresses = new EntitySet<UserAddress>(new Action<UserAddress>(this.attach_UserAddresses), new Action<UserAddress>(this.detach_UserAddresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abbrev", DbType="VarChar(10)")]
		public string abbrev
		{
			get
			{
				return this._abbrev;
			}
			set
			{
				if ((this._abbrev != value))
				{
					this.OnabbrevChanging(value);
					this.SendPropertyChanging();
					this._abbrev = value;
					this.SendPropertyChanged("abbrev");
					this.OnabbrevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USState_UserAddress", Storage="_UserAddresses", ThisKey="ID", OtherKey="USStates")]
		public EntitySet<UserAddress> UserAddresses
		{
			get
			{
				return this._UserAddresses;
			}
			set
			{
				this._UserAddresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserAddresses(UserAddress entity)
		{
			this.SendPropertyChanging();
			entity.USState = this;
		}
		
		private void detach_UserAddresses(UserAddress entity)
		{
			this.SendPropertyChanging();
			entity.USState = null;
		}
	}
}
#pragma warning restore 1591
